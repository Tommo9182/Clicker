@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ApplicationUser? user = null;
    string username = "";
    string userId = "";
    ViewData["Title"] = "Play";
    if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
        username = await UserManager.GetUserNameAsync(user);
        userId = await UserManager.GetUserIdAsync(user);
    }
}
    

<h1 class="text-center">@ViewData["title"]</h1>
<div class="text-center box-container other-box-container">
    <h2 id="select-your-time">Select Your Time</h2>
    <div id="time-buttons">
        <button class="time-button" style="font-family:sans-serif;" onclick="timeButton(1, this)">10s</button>
        <button class="time-button" style="font-family:sans-serif;" onclick="timeButton(30, this)">30s</button>
        <button class="time-button" style="font-family:sans-serif;" onclick="timeButton(60, this)">60s</button><br />
    </div>
    <p class="timer" style="visibility:hidden;" id="timer">0</p><br/>
    <a class="clicker-button general-button" style="visibility:hidden;" onclick="incrementer();" id="increment-button">Click!</a>
</div>

<script>

    let numClicks = 0;
    let started = false;
    let time = 0;
    let timeRemaining = 0;
    const timer = document.getElementById("timer");
    let timerInterval = null;

    function timeButton(seconds, button) {
        var timeButtons = document.getElementById("time-buttons").children;
        const incrementButton = document.getElementById("increment-button");

        document.getElementById("select-your-time").style.visibility = "hidden";

        time = seconds;
        timeRemaining = seconds;

        button.style.backgroundColor = "green";
        for (let i = 0; i < timeButtons.length; i++) {
            if (timeButtons[i] != button) {
                timeButtons[i].style.backgroundColor = "#efefef";
            }
            timeButtons[i].disabled = true;
        }
        incrementButton.style.visibility = "visible";
    }

    function incrementer() {
        if (!started) {
            started = true;
            timer.style.visibility = "visible";
            timer.innerHTML = timeRemaining;
            timerInterval = setInterval(updateCountdown, 1000);
        }
        numClicks++;
        document.getElementById("increment-button").innerHTML = numClicks;
    }
    
    function updateCountdown() {
        const currentUserName = @Json.Serialize(username);
        const currentUserId = @Json.Serialize(userId);

        timeRemaining--;
        timer.innerHTML = timeRemaining;
        if(timeRemaining <= 3){
            timer.style.color = "red";
        }
        if(timeRemaining == 0 && timerInterval !== null){
            clearInterval(timerInterval);
            timer.innerHTML = "Time's Up!";
            timer.style.color = "black";

            const data = {
                username: currentUserName,
                ApplicationUserId: currentUserId,
                clicks: numClicks,
                time: time,
                clicksPerMinute: (60 / time * numClicks)
            };
            const queryString = Object.keys(data).map(key => key + '=' + encodeURIComponent(data[key])).join('&');
            window.location.href = "/Play/Results?" + queryString;
        }
    }

</script>
